<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link href="default.css" rel="stylesheet" type="text/css">
<title>PHP Simple HTML DOM Parser: FAQ</title>
<link href="css/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<h1><a name="top"></a>PHP Simple HTML DOM Parser Manual</h1>
<div id="content">
  <h2>Index</h2>
  <ul>
    <li><a href="manual.htm">Back to index</a></li>
  </ul>
  <h2>FAQ</h2>
  <ul>
    <li><a href="#memory_leak">Memory leak!</a></li>
    <li><a href="#customize">How to customize the parsing behavior?</a></li>
    <li><a href="#hosting">Problem with hosting</a></li>
    <li><a href="#proxy">Behind a proxy</a></li>
  </ul>
  <a name="memory_leak"></a>
  <h2>Memory leak!</h2>
	<a class="top" href="#top">Top</a>
  <div class="code"> <span class="var">Q:</span> This script is leaking memory seriously... After it finished running, it's not cleaning up dom object properly from memory.. <br>
    <br>
    <span class="var">A:</span> Due to php5 circular references memory leak, after creating DOM object, you must call $dom-&gt;clear() to free memory. <br>
    <br>
    example: <br>
    <br>
    $dom = file_get_dom(...); <br>
    <span class="comment">// do something... </span><br>
    $dom-&gt;clear(); <br>
    unset($dom);</div>
	<a name="customize"></a>
  <h2>How to customize the parsing behavior?</h2>
	<a class="top" href="#top">Top</a>
  <div class="code"> The method &quot;find(...)&quot; always returns <strong>elements</strong>, but method &quot;parse()&quot; returns <strong>node</strong>.<br>
One <strong>element</strong> may contains many <strong>nodes</strong>, for example, a <strong>element</strong> of &lt;a&gt; contains 3 <strong>nodes</strong>:<br>
<br>
&lt;a href=&quot;#&quot;&gt; &nbsp;<span class="var">&nbsp;</span> link&nbsp;<span class="var">&nbsp;&nbsp;</span><span class="var">&nbsp;&nbsp;</span><span class="var">&nbsp; </span>&lt;/a&gt;<br>
<span class="var">----------------&nbsp;&nbsp;&nbsp;--------&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--------</span><br>
node1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="var">&nbsp;</span>node2&nbsp;&nbsp;<span class="var">&nbsp; &nbsp;</span><span class="var"> &nbsp;</span>node3<br>
<br>
The attribute named $node-><strong>nodetype</strong> is particularly useful to identify the type of node while parsing. <br>
Its value may be <span class="var">HDOM_TYPE_ELEMENT</span>, <span class="var">HDOM_TYPE_COMMENT</span>, <span class="var">HDOM_TYPE_TEXT</span>, <span class="var">HDOM_TYPE_ENDTAG</span>. <br>
<br>
Lots of <strong>element's </strong> properties is not determined until the end of parsing loop, <br>
calling any magic methods such as <strong>innertext</strong>, <strong>outertext, plaintext</strong> will cause <span class="var">unexceptable errors</span>!<br>
<br>
While parsing, uses <strong>node's</strong> internal methods or array to prevent the problem.<br>
<br>
    <span class="comment">// example of how to customize the parsing behavior (example_utility.php) </span><br>
    <span class="comment"><br>
// HTML text extractor</span><br>
<strong>function</strong> html_to_text($str) {<br>
<span class="comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 1. create DOM object</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$dom = new html_dom_parser(); <span class="comment"><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 2. prepare HTML data and init everything</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$dom-&gt;<strong>prepare</strong>($str);<span class="comment"><br>
<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 3. some contents such as 'comments', 'styles' or 'script' will be treated as 'text',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// so we need to remove it before parsing, see the example for more details ...</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$parser-&gt;remove_noise(<span class="var">&quot;'&lt;!doctype(.*?)&gt;'is&quot;</span>);<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$parser-&gt;remove_noise(<span class="var">&quot;'&lt;!--(.*?)--&gt;'is&quot;</span>);<br>
<br>
<span class="comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 4. parsing each node</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret = '';<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while ($node=$dom-&gt;<strong>parse</strong>()) {<br>
<span class="comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// dump contents of node which tag is 'text'</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($node-&gt;nodetype==<span class="var">HDOM_TYPE_TEXT</span>)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret .= htmlspecialchars_decode($node-&gt;<strong>text</strong>());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $ret;<br>
} <br>
<br>
<span class="comment">// test it!</span><br>
$str = file_get_contents(<span class="var">'http://www.google.com/'</span>);<br>
echo html_to_text($str);<br>
  </div>
  <div> <a name="hosting"></a>
    <h2>Problem with hosting</h2>
		<a class="top" href="#top">Top</a>
    <div class="code"> <span class="var">Q:</span> On my local server everything works fine, but when I put it on my esternal server it doesn't work. <br>
      <br>
      <span class="var">A:</span> The "file_get_dom" function is a wrapper of "file_get_contents" function,  you must set "<strong>allow_url_fopen</strong>" as TRUE in "php.ini" to allow accessing files via HTTP or FTP. However, some hosting venders disabled PHP's "allow_url_fopen" flag for security issues... PHP provides excellent support for "curl" library to do the same job, Use curl to get the page, then call "str_get_dom" to create DOM object. <br>
      <br>
      example: <br>
       <br>
      $curl = curl_init(); <br>
      curl_setopt(<span class="var">$curl, CURLOPT_URL, 'http://????????'</span>);  <br>
      curl_setopt(<span class="var">$curl, CURLOPT_RETURNTRANSFER, 1</span>);  <br>
      curl_setopt(<span class="var">$curl, CURLOPT_CONNECTTIMEOUT, 10</span>);  <br>
      $str = curl_exec(<span class="var">$curl</span>);  <br>
      curl_close($curl);  <br>
       <br>
      $dom= <strong>str_get_dom</strong>($str); <br>
      ...  </div>
    <a name="proxy"></a>
    <div>
      <h2>Behind a proxy</h2>
			<a class="top" href="#top">Top</a>
      <div class="code"> <span class="var">Q:</span> My server is behind a Proxy and i can't use file_get_contents b/c it returns a unauthorized error.<br>
        <br>
        <span class="var">A:</span> Thanks for Shaggy to provide the solution. <br>
         <br>
        example: <br>
         <br>
        <span class="comment">// Define a context for HTTP. </span><br>
        $context = array<br>
        ( <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="var">'http'</span> =&gt; array<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ( <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span class="var">'proxy'</span> =&gt; <span class="var">'addresseproxy:portproxy'</span>, <span class="comment">// This needs to be the server and the port of the NTLM Authentication Proxy Server. </span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="var"> 'request_fulluri'</span> =&gt; true, <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ), <br>
        ); <br>
        <br>
        $context = <strong>stream_context_create</strong>($context); <br>
         <br>
        $dom= <strong>file_get_dom</strong>(<span class="var">'http://www.php.net'</span>, <span class="var">false</span>, <span class="var">$context</span>); <br>
        ... <span class="comment"><br>
        </span></div>
    </div>
    <br>
    Author: S.C. Chen (me578022@gmail.com)<br>
    Contributions by: Yousuke Kumakura (Attribute Filters) <br>
  </div>
</div>
</body>
</html>
