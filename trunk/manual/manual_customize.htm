<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta http-equiv="pragma" content="no-cache">
<link href="default.css" rel="stylesheet" type="text/css">
<title>PHP Simple HTML DOM Parser</title>
<link href="css/default.css" rel="stylesheet" type="text/css">
</head>
<body>
<h1 align="center">PHP Simple HTML DOM Parser Manual </h1>
<div id="content">
  <h2>Index</h2>
  <ul>
    <li><a href="manual.htm">Back to index</a></li>
  </ul>
  <h2>How to customize the parsing behavior?</h2>
  <div id="container_customize">
    <ul>
      <li><a href="#extractor"><span>Write a HTML text extractor</span></a></li>
      <li><a href="#tips"><span>Tips</span></a></li>
    </ul>
    <a name="#extractor"></a>
    <h2>Write a HTML text extractor</h2>
    <div id="fragment_customize_extractor">
      <div class="code"><span class="var">&lt;?php</span><br>
          <span class="comment">// example of how to customize the parsing behavior</span><br>
        include(<span class="var">'html_dom_parser.php'</span>);<br>
        <span class="comment"><br>
        // HTML text extractor</span><br>
        <strong>function</strong> html_extract_contents($str) {<br>
        <span class="comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 1. create DOM object</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$dom = new html_dom_parser(); <span class="comment"><br>
        <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 2. prepare HTML data and init everything</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$dom-&gt;<strong>prepare</strong>($str);<span class="comment"><br>
        <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 3. some contents such as 'comments', 'styles' or 'script' will be treated as 'text',<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// so we need to remove it before parsing, see the example for more details ...</span><br>
        <br>
        <span class="comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// 4. parsing each node</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret = '';<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while ($node=$dom-&gt;<strong>parse</strong>()) {<br>
        <span class="comment">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;// dump contents of node which tag is 'text'</span><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if ($node-&gt;tag==<span class="var">'text'</span>)<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ret .= htmlspecialchars_decode($node-&gt;<strong>text</strong>());<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return $ret;<br>
        } <br>
        <br>
        <span class="comment">// test it!</span><br>
        $str = file_get_contents(<span class="var">'http://www.google.com/'</span>);<br>
        echo <strong>html_extract_contents</strong>($str);<br>
        <span class="var">?&gt;</span><br>
      </div>
    </div>
    <a name="#tips"></a>
    <h2>Tips</h2>
    <div id="fragment_customize_tips">
      <div class="code"> <br>
        The method &quot;find(...)&quot; always returns <strong>elements</strong>, but method &quot;parse()&quot; returns <strong>node</strong>.<br>
        One <strong>element</strong> may contains many <strong>nodes</strong>, for example, a <strong>element</strong> of &lt;a&gt; contains 3 <strong>nodes</strong>:<br>
        <br>
        <br>
&lt;a href=&quot;#&quot;&gt; &nbsp;<span class="var">&nbsp;</span> link&nbsp;<span class="var">&nbsp;&nbsp;</span><span class="var">&nbsp;&nbsp;</span><span class="var">&nbsp; </span>&lt;/a&gt;<br>
        <span class="var">----------------&nbsp;&nbsp;&nbsp;--------&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;--------</span><br>
        node1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span class="var">&nbsp;</span>node2&nbsp;&nbsp;<span class="var">&nbsp; &nbsp;</span>node3<br>
        <br>
        <br>
        The attribute named $node-><strong>nodetype</strong> is particularly useful to identify the type of node while parsing. <br>
        Its value may be <span class="var">HDOM_TYPE_ELEMENT</span>, <span class="var">HDOM_TYPE_ENDTAG</span>, <span class="var">HDOM_TYPE_TEXT</span>. <br>
        <br>
        Lots of <strong>element's </strong> properties is not determined until the end of parsing loop, <br>
        calling any magic methods such as <strong>innertext</strong>, <strong>outertext, <strong>plaintext</strong></strong> will cause <span class="var">unexceptable errors</span>!<br>
        <br>
        While parsing, uses <strong>node's</strong> internal methods or array to prevent the problem.<br>
        <br>
      </div>
    </div>
  </div>
  <div><br>
    Author: S.C. Chen (me578022@gmail.com)<br>
    Contributions by: Yousuke Kumakura (Attribute Filters) <br>
    <br>
  </div>
</div>
<br>
</body>
</html>
